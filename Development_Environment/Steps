1. Setup - using virtualenv_sublime_pycharm or django_folder_structure
2. super_user
3. app
4. models.py in app
5. settings.py in src
6. Migrate in terminal - python manage.py migrate
   this gives migration has changed but not applied. So it says models has changed but not pushed to DB for sync

7. So run - python manage.py makemigrations
8. again run - python manage.py migrate
this ll make sure db is in sync with the models.

9. Now adding models to admin

10. So open up admin.py to register your models

11. we need to run the server again - now after this if you go to admin url you can see posts there

12. Now add a post from admin. - This will add the post to database

13. Customization to django admin

14. CRUD with admin  - With database its INSERT, SELECT, UPDATE, DELETE
CRUD is also done on forms using POST,GET,PUT,DELETE  -- CUD requires permissions on views

15. Creating views for html contents. so we have things database.
Views.py - developing function based views

16. Now these views need to be rendered as url. So go urls.py to register the views in urls.py

17. create urls.py in posts. these includes all the urls for posts app. now we can include all these urls back in
    urls.py in blog

    so this is how it works - import views of polls app into urls.py of polls. so that it can list the urls for this
    specific apps views. and then we can import these urls into main app urls.py.

18. go to views.py to add crud operations

19. Next is setting up django templates.

BASE_DIR - Is the path where src is located. But its not hardcoded, hence uses OS path module to locate it. In Our case,

src = /home/kartik/PycharmProjects/django_blog

Now, make a folder inside src and add the path in settings.py -
in templates dir would be []. Add the path here as os.path.join(base_dir,'templates' )

if this path is not added then django cant locate the template to load.

